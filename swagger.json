{"swagger": "2.0", "info": {"title": "RAPIFUZZ", "description": "RAPIFUZZ", "termsOfService": "", "contact": {"email": ""}, "license": {"name": ""}, "version": "v1"}, "host": "127.0.0.1:8000", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/abort-testing/{pid}/{sid}": {"get": {"operationId": "abort-testing_read", "description": "This API function is for aborting the scan testing \nin the mid way.\nWhenever user wants to cancel the running scan\nthe he/she clicks on the cancel button on the API \ndiscovered page . Then this API will halt the testing \nprocess in midway. Meanwhile the report of those modules \nis generated which got executed during the process.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["abort-testing"]}, "post": {"operationId": "abort-testing_create", "description": "This API function is for aborting the scan testing \nin the mid way.\nWhenever user wants to cancel the running scan\nthe he/she clicks on the cancel button on the API \ndiscovered page . Then this API will halt the testing \nprocess in midway. Meanwhile the report of those modules \nis generated which got executed during the process.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["abort-testing"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/addapi/{sid}": {"post": {"operationId": "addapi_create", "description": "This class view is for adding an API in MITM table.\nFor adding a new API you need to\nsend the data in the json format just like\nthis : {\n    \"local_variables\": \"\",\n    \"method\": \"GET\",\n    \"url\":\"\",\n    \"req_headers\": \"{'User-Agent': 'PostmanRuntime/7.26.8', 'Accept': '*/*', 'Postman-Token': '3fe382d8-5744-4ef5-af9d-72741cda3d7e', 'Host': 'vampi.demo.ramognee.co', 'Accept-Encoding': 'gzip, deflate, br', 'Connection': 'keep-alive'}\",\n    \"req_body\": \"\",\n    \"resp_code\": \"200\",\n    \"resp_reason\": \"OK\",\n    \"resp_headers\": \"{'Server': 'nginx/1.14.0 (Ubuntu)', 'Date': 'Sat, 12 Feb 2022 10:26:25 GMT', 'Content-Type': 'application/json', 'Content-Length': '102781', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'}\",\n    \"resp_body\": \"{'user':'hello'}\",\n    \"source\": \"webproxy/swagger\",\n    \"api_type\": \"REST\",\n    \"req_body_type\": \"JSON\",\n    \"auth_required\": false,\n    \"validation_status\": \"Verified\",\n    \"auth_type\": \"noauth\",\n    }", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AddAPIMITM"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AddAPIMITM"}}}, "tags": ["addapi"]}, "parameters": [{"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/addtestcase/{eid}": {"post": {"operationId": "addtestcase_create", "description": "This class view is for adding an API in EndpointTestcase table.\nFor adding a new Testcase you need to\nsend the data in the json format just like\nthis : {\n    \"local_variables\": \"\",\n    \"method\": \"GET\",\n    \"url\":\"\",\n    \"req_headers\": \"{'User-Agent': 'PostmanRuntime/7.26.8', 'Accept': '*/*', 'Postman-Token': '3fe382d8-5744-4ef5-af9d-72741cda3d7e', 'Host': 'vampi.demo.ramognee.co', 'Accept-Encoding': 'gzip, deflate, br', 'Connection': 'keep-alive'}\",\n    \"req_body\": \"\",\n    \"resp_code\": \"200\",\n    \"resp_reason\": \"OK\",\n    \"resp_headers\": \"{'Server': 'nginx/1.14.0 (Ubuntu)', 'Date': 'Sat, 12 Feb 2022 10:26:25 GMT', 'Content-Type': 'application/json', 'Content-Length': '102781', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*'}\",\n    \"resp_body\": \"{'user':'hello'}\",\n    \"source\": \"webproxy/swagger\",\n    \"api_type\": \"REST\",\n    \"req_body_type\": \"JSON\",\n    \"auth_required\": false,\n    \"validation_status\": \"Verified\",\n    \"auth_type\": \"noauth\",\n    }", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AddAPIEndpointTestcase"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AddAPIEndpointTestcase"}}}, "tags": ["addtestcase"]}, "parameters": [{"name": "eid", "in": "path", "required": true, "type": "string"}]}, "/all-statuses": {"post": {"operationId": "all-statuses_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["all-statuses"]}, "parameters": []}, "/api/token": {"post": {"operationId": "api_token_create", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenObtainPair"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenObtainPair"}}}, "tags": ["api"]}, "parameters": []}, "/api/token/refresh": {"post": {"operationId": "api_token_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["api"]}, "parameters": []}, "/apis/{eid}": {"get": {"operationId": "apis_read", "description": "This class view is for viewing deleting and editing\na an API in MITM table.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EditMITM"}}}, "tags": ["apis"]}, "put": {"operationId": "apis_update", "description": "This class view is for viewing deleting and editing\na an API in MITM table.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EditMITM"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EditMITM"}}}, "tags": ["apis"]}, "patch": {"operationId": "apis_partial_update", "description": "This class view is for viewing deleting and editing\na an API in MITM table.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EditMITM"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EditMITM"}}}, "tags": ["apis"]}, "delete": {"operationId": "apis_delete", "description": "This class view is for viewing deleting and editing\na an API in MITM table.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["apis"]}, "parameters": [{"name": "eid", "in": "path", "description": "A unique integer value identifying this mitm.", "required": true, "type": "integer"}]}, "/assignable-users": {"post": {"operationId": "assignable-users_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["assignable-users"]}, "parameters": []}, "/aut-url-check": {"get": {"operationId": "aut-url-check_list", "description": "API for checking if the given url is\nthird party api or already exists.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["aut-url-check"]}, "post": {"operationId": "aut-url-check_create", "description": "API for checking if the given url is\nthird party api or already exists.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["aut-url-check"]}, "parameters": []}, "/cancel-scanning/{pid}/{sid}": {"get": {"operationId": "cancel-scanning_read", "description": "Cancel scanning of endpoints using mitm proxy.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["cancel-scanning"]}, "post": {"operationId": "cancel-scanning_create", "description": "Cancel scanning of endpoints using mitm proxy.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["cancel-scanning"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/check/proxyports/{pid}/{sid}": {"get": {"operationId": "check_proxyports_read", "description": "API To return the current status of \nthe occupied ports.It returns the \nfirst non occupied port it finds from \nthe list of ports", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["check"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/compare-scans-data-excel/{pid}": {"get": {"operationId": "compare-scans-data-excel_read", "description": "API for accessing compare scans data.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["compare-scans-data-excel"]}, "post": {"operationId": "compare-scans-data-excel_create", "description": "API for accessing compare scans data.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["compare-scans-data-excel"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}]}, "/compare-scans-data/{pid}": {"get": {"operationId": "compare-scans-data_read", "description": "API for accessing compare scans data.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["compare-scans-data"]}, "post": {"operationId": "compare-scans-data_create", "description": "API for accessing compare scans data.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["compare-scans-data"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}]}, "/create-issue": {"post": {"operationId": "create-issue_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["create-issue"]}, "parameters": []}, "/create-user": {"post": {"operationId": "create-user_create", "description": "This class view is for creating a new user.\nFor creating a new user you need to\nsend the data in the json format just like\nthis : {\n            \"email\":\"sam@mail.com\",\n            \"name\":\"Sammy\",\n            \"password\":\"sam123\"\n        }", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["create-user"]}, "parameters": []}, "/createmitmdata/{pid}/{sid}": {"get": {"operationId": "createmitmdata_read", "description": "This API is for creating data using MITM proxy.\nAll the data collected using proxy get stored in\nfiles.The data is then read and stored in \nmitm_and_addresponse table.Directory of each \nScan scan is made separetely and its respective\nmitm data is stoed in that particular directory only", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["createmitmdata"]}, "post": {"operationId": "createmitmdata_create", "description": "This API is for creating data using MITM proxy.\nAll the data collected using proxy get stored in\nfiles.The data is then read and stored in \nmitm_and_addresponse table.Directory of each \nScan scan is made separetely and its respective\nmitm data is stoed in that particular directory only", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["createmitmdata"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/createproject": {"post": {"operationId": "createproject_create", "description": "This class view is for creating a new proejct.\nFor creating a new project you need to\nsend the data in the json format just like\nthis : {\n    \"uid\":1,\n    \"pname\":\"sample\",\n    \"auturl\":\"http://sample.com/\",\n    \"description\":\"sample description\",\n    \"gv\":{\n        \"recieve_time_out\":{\n            \"value\":240,\n            \"unit\":\"milisecond\"\n        },\n        \"pagination\":10,\n        \"request_per_client\":{\n            \"value\":100,\n            \"unit\":\"milisecond\"\n        },\n        \"request_payload_size\":{\n            \"value\":10,\n            \"unit\":\"mb\"\n        }\n    }\n}", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["createproject"]}, "parameters": []}, "/createscan": {"post": {"operationId": "createscan_create", "description": "APIView for creating new scan.\nFor creating a new scan you need\nto send the pid in the request\nbody of the API.\nLike this :{\"uid\":1,\"pid\":4}", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Scan"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Scan"}}}, "tags": ["createscan"]}, "parameters": []}, "/csvreports/{pid}/{sid}": {"get": {"operationId": "csvreports_read", "description": "This API view takes up the data from three tables \nand convert that data to a excel file.\nTable utilized :-\n1.Scan table for project details like project name its description\n2.MITM table for the number of APIs collected in discovery\nprocess.\n3.individual_report table which conatains detailed failure report of the \nendpoints.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["csvreports"]}, "post": {"operationId": "csvreports_create", "description": "This API view takes up the data from three tables \nand convert that data to a excel file.\nTable utilized :-\n1.Scan table for project details like project name its description\n2.MITM table for the number of APIs collected in discovery\nprocess.\n3.individual_report table which conatains detailed failure report of the \nendpoints.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["csvreports"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/current-status/{pid}/{sid}": {"get": {"operationId": "current-status_read", "description": "API for getting the current status", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["current-status"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/delete-apis/{pid}/{sid}": {"get": {"operationId": "delete-apis_read", "description": "This is the final API to save all the APIs from the swagger file\ninto the database.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["delete-apis"]}, "delete": {"operationId": "delete-apis_delete", "description": "This is the final API to save all the APIs from the swagger file\ninto the database.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["delete-apis"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/delete-issue": {"post": {"operationId": "delete-issue_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["delete-issue"]}, "parameters": []}, "/delete-multiple-endpoints/{pid}/{sid}": {"post": {"operationId": "delete-multiple-endpoints_create", "description": "This function is for deleting the multiple endpoints selected\nin frontend.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["delete-multiple-endpoints"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/delete-multiple-testcases/{pid}/{sid}": {"post": {"operationId": "delete-multiple-testcases_create", "description": "This function is for deleting the multiple endpoints selected\nin frontend.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["delete-multiple-testcases"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/delete-previous-file/{pid}/{sid}": {"post": {"operationId": "delete-previous-file_create", "description": "This view takes up the request of uplaoding \na swagger file and store it to the right folder\non the server . In frontend user calls this API\nview whenever user needs to add project APIs\nwith a swagger file.\nSwagger file can be in YAML or JSON format.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["delete-previous-file"]}, "delete": {"operationId": "delete-previous-file_delete", "description": "This view takes up the request of uplaoding \na swagger file and store it to the right folder\non the server . In frontend user calls this API\nview whenever user needs to add project APIs\nwith a swagger file.\nSwagger file can be in YAML or JSON format.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["delete-previous-file"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/delete-swagger-file/{pid}/{sid}": {"get": {"operationId": "delete-swagger-file_read", "description": "This APIis for checking the validity of file and validity of URLs.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["delete-swagger-file"]}, "delete": {"operationId": "delete-swagger-file_delete", "description": "This APIis for checking the validity of file and validity of URLs.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["delete-swagger-file"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/delete/mitmdata/{pid}/{scan_ID}": {"delete": {"operationId": "delete_mitmdata_delete", "description": "This API view is for deleting the mitm data \nwhich is collected using discovery process.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["delete"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "scan_ID", "in": "path", "required": true, "type": "string"}]}, "/endpointreport/{pid}/{sid}/{eid}": {"get": {"operationId": "endpointreport_read", "description": "API for checking if the given url is\nthird party api or already exists.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["endpointreport"]}, "post": {"operationId": "endpointreport_create", "description": "API for checking if the given url is\nthird party api or already exists.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["endpointreport"]}, "parameters": [{"name": "eid", "in": "path", "required": true, "type": "string"}, {"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/get-issue": {"post": {"operationId": "get-issue_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["get-issue"]}, "parameters": []}, "/getalltestcases/{sid}/{eid}": {"get": {"operationId": "getalltestcases_read", "description": "For getting all the testcases eid wise.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["getalltestcases"]}, "parameters": [{"name": "eid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/getalltestreport/{pid}/{sid}": {"get": {"operationId": "getalltestreport_read", "description": "API for checking if the given url is\nthird party api or already exists.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["getalltestreport"]}, "post": {"operationId": "getalltestreport_create", "description": "API for checking if the given url is\nthird party api or already exists.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["getalltestreport"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/getappurl/{proj_id}": {"get": {"operationId": "getappurl_read", "description": "Used", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["getappurl"]}, "parameters": [{"name": "proj_id", "in": "path", "required": true, "type": "string"}]}, "/getmitmdata/{pid}/{sid}": {"post": {"operationId": "getmitmdata_create", "description": "This API function is for retrieving APIs \ncollected either during MITM process\nor through Swagger file.\nThe list of APIs then displayed on the \nAPI Discovery page.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["getmitmdata"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/getverified/{pid}/{sid}": {"get": {"operationId": "getverified_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["getverified"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/hitapi": {"post": {"operationId": "hitapi_create", "description": "API for hitting the api using requests module.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["hitapi"]}, "parameters": []}, "/ipaddress/{pid}/{sid}": {"put": {"operationId": "ipaddress_update", "description": "Capturing the IP of the client while \ncapuring the mitm data.\nNot used right now", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["ipaddress"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/issue-statuses": {"post": {"operationId": "issue-statuses_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["issue-statuses"]}, "parameters": []}, "/issue-types": {"post": {"operationId": "issue-types_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["issue-types"]}, "parameters": []}, "/jira-details": {"post": {"operationId": "jira-details_create", "description": "Configurig JIRA creds.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/JIRA"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/JIRA"}}}, "tags": ["jira-details"]}, "parameters": []}, "/jira-details/{id}": {"get": {"operationId": "jira-details_read", "description": "Configurig JIRA creds.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/JIRA"}}}, "tags": ["jira-details"]}, "put": {"operationId": "jira-details_update", "description": "Configurig JIRA creds.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/JIRA"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/JIRA"}}}, "tags": ["jira-details"]}, "patch": {"operationId": "jira-details_partial_update", "description": "Configurig JIRA creds.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/JIRA"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/JIRA"}}}, "tags": ["jira-details"]}, "delete": {"operationId": "jira-details_delete", "description": "Configurig JIRA creds.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["jira-details"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this jira.", "required": true, "type": "integer"}]}, "/jira-projects": {"post": {"operationId": "jira-projects_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["jira-projects"]}, "parameters": []}, "/license/activate/": {"get": {"operationId": "license_activate_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["license"]}, "post": {"operationId": "license_activate_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["license"]}, "parameters": []}, "/license/delete/": {"get": {"operationId": "license_delete_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["license"]}, "parameters": []}, "/license/get-activation-file/": {"get": {"operationId": "license_get-activation-file_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["license"]}, "parameters": []}, "/license/get_details/": {"get": {"operationId": "license_get_details_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["license"]}, "parameters": []}, "/license/get_details_allusers/": {"get": {"operationId": "license_get_details_allusers_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["license"]}, "parameters": []}, "/license/upload-activation-file/": {"post": {"operationId": "license_upload-activation-file_create", "description": "The below permission class is used to check authentication.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["license"]}, "parameters": []}, "/loadadmin": {"get": {"operationId": "loadadmin_list", "description": "API function for adding the initial ADMin user.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["loadadmin"]}, "parameters": []}, "/logout": {"post": {"operationId": "logout_create", "description": "Used for blacklist the token.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["logout"]}, "parameters": []}, "/mitmendpoint/{eid}": {"get": {"operationId": "mitmendpoint_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["mitmendpoint"]}, "parameters": [{"name": "eid", "in": "path", "required": true, "type": "string"}]}, "/pdfreports/{pid}/{sid}": {"get": {"operationId": "pdfreports_read", "description": "This API Function generates PDF.\nThe pdf data is collected from the tables \nindividual_report,Scan,MITM.\nMITM table contains the data of APIs\ncollected in the discovery process.\nFrom Scan table data of project to be displayed \nis fetched.\nAnd from individual_report table the  report of every API\nis fetched and displayed in the pdf file.\nThis API mcake a call to export_pdf modules function\ngenerate_report().\nThis function takes up the data from this API function \nand generates a pdf report file.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["pdfreports"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/populatedb": {"post": {"operationId": "populatedb_create", "description": "#to create a new project\nPopulating data from dynamic sheet to the db", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["populatedb"]}, "parameters": []}, "/project-data/{pid}": {"get": {"operationId": "project-data_read", "description": "API for accessing the total data.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["project-data"]}, "post": {"operationId": "project-data_create", "description": "API for accessing the total data.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["project-data"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}]}, "/projects": {"post": {"operationId": "projects_create", "description": "ListAPIView for generating the list\nof all Projects.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["projects"]}, "parameters": []}, "/projects/{pid}": {"get": {"operationId": "projects_read", "description": "This class view is for viewing deleting and editing\na project.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProjectEdit"}}}, "tags": ["projects"]}, "put": {"operationId": "projects_update", "description": "This class view is for viewing deleting and editing\na project.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProjectEdit"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProjectEdit"}}}, "tags": ["projects"]}, "patch": {"operationId": "projects_partial_update", "description": "This class view is for viewing deleting and editing\na project.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProjectEdit"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ProjectEdit"}}}, "tags": ["projects"]}, "delete": {"operationId": "projects_delete", "description": "This class view is for viewing deleting and editing\na project.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["projects"]}, "parameters": [{"name": "pid", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/reports/{pid}/{sid}/{id}": {"get": {"operationId": "reports_read", "description": "API for checking if the given url is\nthird party api or already exists.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["reports"]}, "post": {"operationId": "reports_create", "description": "API for checking if the given url is\nthird party api or already exists.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["reports"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/reset-password": {"put": {"operationId": "reset-password_update", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["reset-password"]}, "parameters": []}, "/save-swagger-apis/{pid}/{sid}": {"get": {"operationId": "save-swagger-apis_read", "description": "This is the final API to save all the APIs from the swagger file\ninto the database.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["save-swagger-apis"]}, "delete": {"operationId": "save-swagger-apis_delete", "description": "This is the final API to save all the APIs from the swagger file\ninto the database.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["save-swagger-apis"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/savemitmdata/{pid}/{sid}": {"get": {"operationId": "savemitmdata_read", "description": "This API is for saving Mitm data collected using mitm proxy", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["savemitmdata"]}, "post": {"operationId": "savemitmdata_create", "description": "This API is for saving Mitm data collected using mitm proxy", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["savemitmdata"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/scan-data/{pid}": {"get": {"operationId": "scan-data_read", "description": "API for accessing the card data.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["scan-data"]}, "post": {"operationId": "scan-data_create", "description": "API for accessing the card data.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["scan-data"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}]}, "/scans": {"post": {"operationId": "scans_create", "description": "ListAPIView for generating the list\nof all Scans.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Scan"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Scan"}}}, "tags": ["scans"]}, "parameters": []}, "/send/confirmemail": {"post": {"operationId": "send_confirmemail_create", "summary": "Used to send confirmation mail on \nUsers mail ID.\nHi, Ajit", "description": "This email is to acknowledge that your RAPIFUZZ account is verified.\nPlease find your username below:\naneeraj@ramognee.in\n\nKindly contact your admin to obtain your default password or reset it from the RAPIFUZZ login page.\n\nRegards,\nRAPIFUZZ Team", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["send"]}, "parameters": []}, "/sendemail": {"post": {"operationId": "sendemail_create", "description": "Email used to verify a new user by \nsending OTP on his mail ID.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["sendemail"]}, "parameters": []}, "/small-card-data": {"get": {"operationId": "small-card-data_list", "description": "API for accessing small card data.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["small-card-data"]}, "post": {"operationId": "small-card-data_create", "description": "API for accessing small card data.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["small-card-data"]}, "parameters": []}, "/smtp/{id}": {"get": {"operationId": "smtp_read", "description": "APIView for adding SMTP details", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SMTP"}}}, "tags": ["smtp"]}, "put": {"operationId": "smtp_update", "description": "APIView for adding SMTP details", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SMTP"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SMTP"}}}, "tags": ["smtp"]}, "patch": {"operationId": "smtp_partial_update", "description": "APIView for adding SMTP details", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SMTP"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SMTP"}}}, "tags": ["smtp"]}, "delete": {"operationId": "smtp_delete", "description": "APIView for adding SMTP details", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["smtp"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this smtp.", "required": true, "type": "integer"}]}, "/smtpdetails": {"post": {"operationId": "smtpdetails_create", "description": "APIView for adding SMTP details", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SMTP"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SMTP"}}}, "tags": ["smtpdetails"]}, "parameters": []}, "/starttest/{pid}/{sid}": {"get": {"operationId": "starttest_read", "description": "Main function which starts testing of\nowasp top 10 modules.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["starttest"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/stopmitm/{pid}/{sid}": {"get": {"operationId": "stopmitm_read", "description": "# in the proxy ports data structure \nits finds the port for particular project \nand scan id and performs pop", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["stopmitm"]}, "post": {"operationId": "stopmitm_create", "description": "# in the proxy ports data structure \nits finds the port for particular project \nand scan id and performs pop", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["stopmitm"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/test-data": {"get": {"operationId": "test-data_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["test-data"]}, "post": {"operationId": "test-data_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["test-data"]}, "parameters": []}, "/test/email": {"post": {"operationId": "test_email_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["test"]}, "parameters": []}, "/testcases/{id}": {"get": {"operationId": "testcases_read", "description": "This class view is for viewing deleting and editing\na testcase for an endpoint.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EditAPIEndpointTestcase"}}}, "tags": ["testcases"]}, "put": {"operationId": "testcases_update", "description": "This class view is for viewing deleting and editing\na testcase for an endpoint.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EditAPIEndpointTestcase"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EditAPIEndpointTestcase"}}}, "tags": ["testcases"]}, "patch": {"operationId": "testcases_partial_update", "description": "This class view is for viewing deleting and editing\na testcase for an endpoint.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EditAPIEndpointTestcase"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/EditAPIEndpointTestcase"}}}, "tags": ["testcases"]}, "delete": {"operationId": "testcases_delete", "description": "This class view is for viewing deleting and editing\na testcase for an endpoint.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["testcases"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this endpoint testcase.", "required": true, "type": "integer"}]}, "/total-data": {"get": {"operationId": "total-data_list", "description": "API for accessing the total data.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["total-data"]}, "post": {"operationId": "total-data_create", "description": "API for accessing the total data.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["total-data"]}, "parameters": []}, "/update-apis/{pid}/{sid}": {"post": {"operationId": "update-apis_create", "description": "This API is creating a xlxs file and make it\ndownloadable for taking user input", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["update-apis"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/update-issue": {"post": {"operationId": "update-issue_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["update-issue"]}, "parameters": []}, "/update-user/{id}": {"get": {"operationId": "update-user_read", "description": "For updating the user details.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["update-user"]}, "put": {"operationId": "update-user_update", "description": "For updating the user details.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["update-user"]}, "patch": {"operationId": "update-user_partial_update", "description": "For updating the user details.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/User"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["update-user"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this user.", "required": true, "type": "integer"}]}, "/upload/swagger/{pid}/{sid}": {"post": {"operationId": "upload_swagger_create", "description": "This view takes up the request of uplaoding \na swagger file and store it to the right folder\non the server . In frontend user calls this API\nview whenever user needs to add project APIs\nwith a swagger file.\nSwagger file can be in YAML or JSON format.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["upload"]}, "delete": {"operationId": "upload_swagger_delete", "description": "This view takes up the request of uplaoding \na swagger file and store it to the right folder\non the server . In frontend user calls this API\nview whenever user needs to add project APIs\nwith a swagger file.\nSwagger file can be in YAML or JSON format.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["upload"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/uploadaiosheet": {"post": {"operationId": "uploadaiosheet_create", "description": "This function is uploading the new testcase\nsheet in order to update the static data\nneeded for the application for proper functioning.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["uploadaiosheet"]}, "parameters": []}, "/validate-swagger-file/{pid}/{sid}": {"get": {"operationId": "validate-swagger-file_read", "description": "This APIis for checking the validity of file and validity of URLs.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["validate-swagger-file"]}, "delete": {"operationId": "validate-swagger-file_delete", "description": "This APIis for checking the validity of file and validity of URLs.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["validate-swagger-file"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}, "/vulnerable-paths": {"get": {"operationId": "vulnerable-paths_list", "description": "API for accessing small card data for \nvulnerable paths chart.", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["vulnerable-paths"]}, "post": {"operationId": "vulnerable-paths_create", "description": "API for accessing small card data for \nvulnerable paths chart.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["vulnerable-paths"]}, "parameters": []}, "/xlxsfile-for-user-input/{pid}/{sid}": {"get": {"operationId": "xlxsfile-for-user-input_read", "description": "This API is creating a xlxs file and make it\ndownloadable for taking user input", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["xlxsfile-for-user-input"]}, "parameters": [{"name": "pid", "in": "path", "required": true, "type": "string"}, {"name": "sid", "in": "path", "required": true, "type": "string"}]}}, "definitions": {"AddAPIMITM": {"required": ["sid"], "type": "object", "properties": {"eid": {"title": "Eid", "type": "integer", "readOnly": true}, "local_variables": {"title": "Local variables", "type": "object"}, "method": {"title": "Method", "type": "string", "maxLength": 100, "x-nullable": true}, "domain": {"title": "Domain", "type": "string", "x-nullable": true}, "path": {"title": "Path", "type": "string", "x-nullable": true}, "query": {"title": "Query", "type": "string", "x-nullable": true}, "req_headers": {"title": "Req headers", "type": "string", "x-nullable": true}, "req_body": {"title": "Req body", "type": "string", "x-nullable": true}, "resp_code": {"title": "Resp code", "type": "string", "x-nullable": true}, "resp_reason": {"title": "Resp reason", "type": "string", "x-nullable": true}, "resp_headers": {"title": "Resp headers", "type": "string", "x-nullable": true}, "resp_body": {"title": "Resp body", "type": "string", "x-nullable": true}, "source": {"title": "Source", "type": "string", "x-nullable": true}, "api_type": {"title": "Api type", "type": "string", "x-nullable": true}, "req_body_type": {"title": "Req body type", "type": "string", "x-nullable": true}, "login": {"title": "Login", "type": "string", "x-nullable": true}, "auth_required": {"title": "Auth required", "type": "boolean", "x-nullable": true}, "validation_status": {"title": "Validation status", "type": "string", "maxLength": 30, "x-nullable": true}, "auth_type": {"title": "Auth type", "type": "string", "x-nullable": true}, "third_party_api": {"title": "Third party api", "type": "string", "maxLength": 4, "x-nullable": true}, "path_variables": {"title": "Path variables", "type": "string", "x-nullable": true}, "pid": {"title": "Pid", "type": "integer", "x-nullable": true}, "sid": {"title": "Sid", "type": "integer"}, "uid": {"title": "Uid", "type": "integer"}}}, "AddAPIEndpointTestcase": {"required": ["sid"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "local_variables": {"title": "Local variables", "type": "object"}, "method": {"title": "Method", "type": "string", "maxLength": 100, "x-nullable": true}, "domain": {"title": "Domain", "type": "string", "x-nullable": true}, "path": {"title": "Path", "type": "string", "x-nullable": true}, "query": {"title": "Query", "type": "string", "x-nullable": true}, "req_headers": {"title": "Req headers", "type": "string", "x-nullable": true}, "req_body": {"title": "Req body", "type": "string", "x-nullable": true}, "resp_code": {"title": "Resp code", "type": "string", "x-nullable": true}, "resp_reason": {"title": "Resp reason", "type": "string", "x-nullable": true}, "resp_headers": {"title": "Resp headers", "type": "string", "x-nullable": true}, "resp_body": {"title": "Resp body", "type": "string", "x-nullable": true}, "source": {"title": "Source", "type": "string", "x-nullable": true}, "api_type": {"title": "Api type", "type": "string", "x-nullable": true}, "req_body_type": {"title": "Req body type", "type": "string", "x-nullable": true}, "login": {"title": "Login", "type": "string", "x-nullable": true}, "auth_required": {"title": "Auth required", "type": "boolean", "x-nullable": true}, "validation_status": {"title": "Validation status", "type": "string", "maxLength": 30, "x-nullable": true}, "auth_type": {"title": "Auth type", "type": "string", "x-nullable": true}, "third_party_api": {"title": "Third party api", "type": "string", "maxLength": 4, "x-nullable": true}, "pid": {"title": "Pid", "type": "integer", "x-nullable": true}, "sid": {"title": "Sid", "type": "integer"}, "vid": {"title": "Vid", "type": "integer", "x-nullable": true}, "uid": {"title": "Uid", "type": "integer"}}}, "TokenObtainPair": {"required": ["email", "password"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true, "minLength": 1}}}, "EditMITM": {"required": ["sid"], "type": "object", "properties": {"eid": {"title": "Eid", "type": "integer", "readOnly": true}, "local_variables": {"title": "Local variables", "type": "object"}, "method": {"title": "Method", "type": "string", "maxLength": 100, "x-nullable": true}, "domain": {"title": "Domain", "type": "string", "x-nullable": true}, "path": {"title": "Path", "type": "string", "x-nullable": true}, "query": {"title": "Query", "type": "string", "x-nullable": true}, "req_headers": {"title": "Req headers", "type": "string", "x-nullable": true}, "req_body": {"title": "Req body", "type": "string", "x-nullable": true}, "resp_code": {"title": "Resp code", "type": "string", "x-nullable": true}, "resp_reason": {"title": "Resp reason", "type": "string", "x-nullable": true}, "resp_headers": {"title": "Resp headers", "type": "string", "x-nullable": true}, "resp_body": {"title": "Resp body", "type": "string", "x-nullable": true}, "source": {"title": "Source", "type": "string", "x-nullable": true}, "api_type": {"title": "Api type", "type": "string", "x-nullable": true}, "req_body_type": {"title": "Req body type", "type": "string", "x-nullable": true}, "login": {"title": "Login", "type": "string", "x-nullable": true}, "auth_required": {"title": "Auth required", "type": "boolean", "x-nullable": true}, "validation_status": {"title": "Validation status", "type": "string", "maxLength": 30, "x-nullable": true}, "auth_type": {"title": "Auth type", "type": "string", "x-nullable": true}, "third_party_api": {"title": "Third party api", "type": "string", "maxLength": 4, "x-nullable": true}, "path_variables": {"title": "Path variables", "type": "string", "x-nullable": true}, "pid": {"title": "Pid", "type": "integer", "x-nullable": true}, "sid": {"title": "Sid", "type": "integer"}, "uid": {"title": "Uid", "type": "integer"}}}, "User": {"required": ["email", "name", "password"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer", "readOnly": true}, "last_login": {"title": "Last login", "type": "string", "format": "date-time", "x-nullable": true}, "is_superuser": {"title": "Superuser status", "description": "Designates that this user has all permissions without explicitly assigning them.", "type": "boolean"}, "is_staff": {"title": "Staff status", "description": "Designates whether the user can log into this admin site.", "type": "boolean"}, "is_active": {"title": "Active", "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.", "type": "boolean"}, "date_joined": {"title": "Date joined", "type": "string", "format": "date-time"}, "username": {"title": "Username", "type": "string", "maxLength": 200, "x-nullable": true}, "email": {"title": "Email address", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "name": {"title": "Name", "type": "string", "maxLength": 200, "minLength": 1}, "password": {"title": "Password", "type": "string", "maxLength": 200, "minLength": 1}, "role": {"title": "Role", "type": "string", "maxLength": 20, "x-nullable": true}, "email_verified": {"title": "Email verified", "type": "boolean"}, "groups": {"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.", "type": "array", "items": {"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.", "type": "integer"}, "uniqueItems": true}, "user_permissions": {"description": "Specific permissions for this user.", "type": "array", "items": {"description": "Specific permissions for this user.", "type": "integer"}, "uniqueItems": true}}}, "Project": {"type": "object", "properties": {"pid": {"title": "Pid", "type": "integer", "readOnly": true}, "global_variables": {"title": "Global variables", "type": "object"}, "pname": {"title": "Pname", "type": "string", "x-nullable": true}, "auturl": {"title": "Auturl", "type": "string", "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "status": {"title": "Status", "type": "string", "x-nullable": true}, "created_on": {"title": "Created on", "type": "string", "format": "date-time", "readOnly": true}, "updated_on": {"title": "Updated on", "type": "string", "format": "date-time", "readOnly": true}, "uid": {"title": "Uid", "type": "integer"}}}, "Scan": {"required": ["pid"], "type": "object", "properties": {"sid": {"title": "Sid", "type": "integer", "readOnly": true}, "pname": {"title": "Pname", "type": "string", "x-nullable": true}, "mode": {"title": "Mode", "type": "string", "x-nullable": true}, "mitm_data": {"title": "Mitm data", "type": "string", "x-nullable": true}, "started": {"title": "Started", "type": "string", "format": "date-time", "readOnly": true}, "finished": {"title": "Finished", "type": "string", "format": "date-time", "x-nullable": true}, "status": {"title": "Status", "type": "string", "x-nullable": true}, "uid": {"title": "Uid", "type": "integer"}, "pid": {"title": "Pid", "type": "integer"}}}, "JIRA": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "url": {"title": "Url", "type": "string", "x-nullable": true}, "username": {"title": "Username", "type": "string", "x-nullable": true}, "password": {"title": "Password", "type": "string", "x-nullable": true}}}, "ProjectEdit": {"type": "object", "properties": {"pid": {"title": "Pid", "type": "integer", "readOnly": true}, "global_variables": {"title": "Global variables", "type": "object"}, "pname": {"title": "Pname", "type": "string", "x-nullable": true}, "auturl": {"title": "Auturl", "type": "string", "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "status": {"title": "Status", "type": "string", "x-nullable": true}, "created_on": {"title": "Created on", "type": "string", "format": "date-time", "readOnly": true}, "updated_on": {"title": "Updated on", "type": "string", "format": "date-time", "readOnly": true}, "uid": {"title": "Uid", "type": "integer"}}}, "SMTP": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "host": {"title": "Host", "type": "string", "x-nullable": true}, "port": {"title": "Port", "type": "string", "x-nullable": true}, "tls": {"title": "Tls", "type": "boolean", "x-nullable": true}, "username": {"title": "Username", "type": "string", "x-nullable": true}, "password": {"title": "Password", "type": "string", "x-nullable": true}, "from_email": {"title": "From email", "type": "string", "x-nullable": true}, "test_email": {"title": "Test email", "type": "string", "x-nullable": true}}}, "EditAPIEndpointTestcase": {"required": ["sid"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "local_variables": {"title": "Local variables", "type": "object"}, "req_headers": {"title": "Req headers", "type": "object"}, "method": {"title": "Method", "type": "string", "maxLength": 100, "x-nullable": true}, "domain": {"title": "Domain", "type": "string", "x-nullable": true}, "path": {"title": "Path", "type": "string", "x-nullable": true}, "query": {"title": "Query", "type": "string", "x-nullable": true}, "req_body": {"title": "Req body", "type": "string", "x-nullable": true}, "resp_code": {"title": "Resp code", "type": "string", "x-nullable": true}, "resp_reason": {"title": "Resp reason", "type": "string", "x-nullable": true}, "resp_headers": {"title": "Resp headers", "type": "string", "x-nullable": true}, "resp_body": {"title": "Resp body", "type": "string", "x-nullable": true}, "source": {"title": "Source", "type": "string", "x-nullable": true}, "api_type": {"title": "Api type", "type": "string", "x-nullable": true}, "req_body_type": {"title": "Req body type", "type": "string", "x-nullable": true}, "login": {"title": "Login", "type": "string", "x-nullable": true}, "auth_required": {"title": "Auth required", "type": "boolean", "x-nullable": true}, "validation_status": {"title": "Validation status", "type": "string", "maxLength": 30, "x-nullable": true}, "auth_type": {"title": "Auth type", "type": "string", "x-nullable": true}, "third_party_api": {"title": "Third party api", "type": "string", "maxLength": 4, "x-nullable": true}, "pid": {"title": "Pid", "type": "integer", "x-nullable": true}, "sid": {"title": "Sid", "type": "integer"}, "vid": {"title": "Vid", "type": "integer", "x-nullable": true}, "uid": {"title": "Uid", "type": "integer"}}}}}